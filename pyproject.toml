[project]
name = "titiler"
description = "A modern dynamic tile server built on top of FastAPI and Rasterio/GDAL."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Vincent Sarago", email = "vincent@developmentseed.com"},
]
keywords = [
    "COG",
    "STAC",
    "MosaicJSON",
    "Fastapi",
    "Dynamic tile server",
    "GDAL",
    "Rasterio",
    "OGC",
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
]
version="0.18.5"
dependencies = [
    "titiler.core==0.18.5",
    "titiler.extensions==0.18.5",
    "titiler.mosaic==0.18.5",
    "titiler.application==0.18.5",
]

[project.urls]
Homepage = 'https://developmentseed.org/titiler/'
Documentation = "https://developmentseed.org/titiler/"
Issues = "https://github.com/developmentseed/titiler/issues"
Source = "https://github.com/developmentseed/titiler"
Changelog = "https://developmentseed.org/titiler/release-notes/"

[tool.hatch.build.targets.sdist]
exclude = [
  ".binder",
  ".pytest_cache",
  ".ruff_cache",
  ".vscode",
  ".dockerignore",
  "src/",
  "deployment/",
  "docs/",
  "scripts/",
  "dockerfiles/",
  "docker-compose.yml",
  ".github",
  ".history",
  ".bumpversion.cfg",
  ".flake8",
  ".gitignore",
  ".pre-commit-config.yaml",
  "AUTHORS.txt",
  "CHANGES.md",
  "CONTRIBUTING.md",
]

[build-system]
requires = ["hatchling>=1.12.0"]
build-backend = "hatchling.build"

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
known_first_party = ["titiler"]
known_third_party = [
    "rasterio",
    "morecantile",
    "rio_tiler",
    "cogeo_mosaic",
    "geojson_pydantic",
    "starlette_cramjam",
]
default_section = "THIRDPARTY"

[tool.ruff]
select = [
    "D1",  # pydocstyle errors
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # flake8
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B905",  # ignore zip() without an explicit strict= parameter, only support with python >3.10
]

[tool.mypy]
no_implicit_optional = true
strict_optional = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::rasterio.errors.NotGeoreferencedWarning",
]

[tool.hatch.build.targets.wheel]
bypass-selection = true

[tool.bumpversion]
current_version = "0.18.5"
parse = """(?x)
    (?P<major>\\d+)\\.
    (?P<minor>\\d+)\\.
    (?P<patch>\\d+)
    (?:
        (?P<pre_l>a|b|rc)   # pre-release label
        (?P<pre_n>\\d+)     # pre-release version number
    )?                      # pre-release section is optional
    (?:
        \\.post
        (?P<post_n>\\d+)    # post-release version number
    )?                      # post-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}.post{post_n}",
    "{major}.{minor}.{patch}{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]

search = "{current_version}"
replace = "{new_version}"
regex = false
tag = true
commit = true
tag_name = "{new_version}"

###############################################################################
# update titiler meta package
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version="{current_version}"'
replace = 'version="{new_version}"'

# core
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'titiler.core=={current_version}'
replace = 'titiler.core=={new_version}'

# extensions
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'titiler.extensions=={current_version}'
replace = 'titiler.extensions=={new_version}'

# mosaic
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'titiler.mosaic=={current_version}'
replace = 'titiler.mosaic=={new_version}'

# application
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'titiler.application=={current_version}'
replace = 'titiler.application=={new_version}'

###############################################################################
# Update sub modules version
# titiler.core
[[tool.bumpversion.files]]
filename = "src/titiler/core/titiler/core/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# titiler.extensions
[[tool.bumpversion.files]]
filename = "src/titiler/extensions/titiler/extensions/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# titiler.mosaic
[[tool.bumpversion.files]]
filename = "src/titiler/mosaic/titiler/mosaic/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# titiler.application
[[tool.bumpversion.files]]
filename = "src/titiler/application/titiler/application/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

###############################################################################
# Update sub modules dependencies
[[tool.bumpversion.files]]
filename = "src/titiler/extensions/pyproject.toml"
search = 'titiler.core=={current_version}'
replace = 'titiler.core=={new_version}'

[[tool.bumpversion.files]]
filename = "src/titiler/mosaic/pyproject.toml"
search = 'titiler.core=={current_version}'
replace = 'titiler.core=={new_version}'

[[tool.bumpversion.files]]
filename = "src/titiler/application/pyproject.toml"
search = 'titiler.core=={current_version}'
replace = 'titiler.core=={new_version}'

[[tool.bumpversion.files]]
filename = "src/titiler/application/pyproject.toml"
search = 'titiler.extensions[cogeo,stac]=={current_version}'
replace = 'titiler.extensions[cogeo,stac]=={new_version}'

[[tool.bumpversion.files]]
filename = "src/titiler/application/pyproject.toml"
search = 'titiler.mosaic=={current_version}'
replace = 'titiler.mosaic=={new_version}'

# deployment files
[[tool.bumpversion.files]]
filename = "deployment/aws/lambda/Dockerfile"
search = 'titiler.application=={current_version}'
replace = 'titiler.application=={new_version}'

[[tool.bumpversion.files]]
filename = "deployment/k8s/charts/Chart.yaml"
search = 'appVersion: {current_version}'
replace = 'appVersion: {new_version}'
