[project]
name = "titiler"
description = "A modern dynamic tile server built on top of FastAPI and Rasterio/GDAL."
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "Vincent Sarago", email = "vincent@developmentseed.com"},
]
keywords = [
    "COG",
    "STAC",
    "MosaicJSON",
    "Fastapi",
    "Dynamic tile server",
    "GDAL",
    "Rasterio",
    "OGC",
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
]
version="0.24.2"
dependencies = [
    "titiler-core",
    "titiler-xarray",
    "titiler-extensions",
    "titiler-mosaic",
    "titiler-application",
]

[dependency-groups]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "httpx",
    "zarr!=3.0.9",
    "h5netcdf",
    "fsspec",
    "s3fs",
    "aiohttp",
    "requests",
    "cogeo-mosaic>=8.2,<9.0",
    "pystac[validation]>=1.0.0,<2.0.0",
    "brotlipy",
    "boto3",
    "pre-commit",
    "bump-my-version",
]
telemetry = [
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-logging",
    "opentelemetry-exporter-otlp",
]
docs = [
    "black>=23.10.1",
    "mkdocs>=1.4.3",
    "mkdocs-jupyter>=0.24.5",
    "mkdocs-material[imaging]>=9.5",
    "griffe-inherited-docstrings>=1.0.0",
    "mkdocstrings[python]>=0.25.1",
]

[project.urls]
Homepage = 'https://developmentseed.org/titiler/'
Documentation = "https://developmentseed.org/titiler/"
Issues = "https://github.com/developmentseed/titiler/issues"
Source = "https://github.com/developmentseed/titiler"
Changelog = "https://developmentseed.org/titiler/release-notes/"

[tool.uv]
package = false

[tool.uv.sources]
titiler-core = { workspace = true }
titiler-extensions = { workspace = true }
titiler-mosaic = { workspace = true }
titiler-application = { workspace = true }
titiler-xarray = { workspace = true }

[tool.uv.workspace]
members = [
  "src/titiler/*"
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
known_first_party = ["titiler"]
known_third_party = [
    "rasterio",
    "morecantile",
    "rio_tiler",
    "cogeo_mosaic",
    "geojson_pydantic",
    "starlette_cramjam",
]
default_section = "THIRDPARTY"

[tool.ruff.lint]
select = [
    "D1",  # pydocstyle errors
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # flake8
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B905",  # ignore zip() without an explicit strict= parameter, only support with python >3.10
]
exclude = [
    "*.ipynb"
]

[tool.mypy]
no_implicit_optional = true
strict_optional = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::rasterio.errors.NotGeoreferencedWarning",
]

[tool.bumpversion]
current_version = "0.24.2"
parse = """(?x)
    (?P<major>\\d+)\\.
    (?P<minor>\\d+)\\.
    (?P<patch>\\d+)
    (?:
        (?P<pre_l>a|b|rc)   # pre-release label
        (?P<pre_n>\\d+)     # pre-release version number
    )?                      # pre-release section is optional
    (?:
        \\.post
        (?P<post_n>\\d+)    # post-release version number
    )?                      # post-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}.post{post_n}",
    "{major}.{minor}.{patch}{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]

search = "{current_version}"
replace = "{new_version}"
regex = false
tag = false
commit = false
allow_dirty = true
tag_name = "{new_version}"

###############################################################################
# update titiler meta package
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version="{current_version}"'
replace = 'version="{new_version}"'

###############################################################################
# Update sub modules version
# titiler.core
[[tool.bumpversion.files]]
filename = "src/titiler/core/titiler/core/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# titiler.xarray
[[tool.bumpversion.files]]
filename = "src/titiler/xarray/titiler/xarray/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# titiler.extensions
[[tool.bumpversion.files]]
filename = "src/titiler/extensions/titiler/extensions/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# titiler.mosaic
[[tool.bumpversion.files]]
filename = "src/titiler/mosaic/titiler/mosaic/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

# titiler.application
[[tool.bumpversion.files]]
filename = "src/titiler/application/titiler/application/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

###############################################################################
# Update sub modules dependencies
# titiler.xarray
[[tool.bumpversion.files]]
filename = "src/titiler/xarray/pyproject.toml"
search = 'titiler-core=={current_version}'
replace = 'titiler-core=={new_version}'

# titiler.extensions
[[tool.bumpversion.files]]
filename = "src/titiler/extensions/pyproject.toml"
search = 'titiler-core=={current_version}'
replace = 'titiler-core=={new_version}'

# titiler.mosaic
[[tool.bumpversion.files]]
filename = "src/titiler/mosaic/pyproject.toml"
search = 'titiler-core=={current_version}'
replace = 'titiler-core=={new_version}'

# titiler.application
[[tool.bumpversion.files]]
filename = "src/titiler/application/pyproject.toml"
search = 'titiler-core[telemetry]=={current_version}'
replace = 'titiler-core[telemetry]=={new_version}'

[[tool.bumpversion.files]]
filename = "src/titiler/application/pyproject.toml"
search = 'titiler-extensions[cogeo,stac]=={current_version}'
replace = 'titiler-extensions[cogeo,stac]=={new_version}'

[[tool.bumpversion.files]]
filename = "src/titiler/application/pyproject.toml"
search = 'titiler-mosaic=={current_version}'
replace = 'titiler-mosaic=={new_version}'

###############################################################################
# Others
[[tool.bumpversion.files]]
filename = "deployment/aws/lambda/Dockerfile"
search = 'titiler-application=={current_version}'
replace = 'titiler-application=={new_version}'

[[tool.bumpversion.files]]
filename = "deployment/aws/lambda/Dockerfile.xarray"
search = 'titiler-xarray=={current_version}'
replace = 'titiler-xarray=={new_version}'

[[tool.bumpversion.files]]
filename = "deployment/k8s/charts/Chart.yaml"
search = 'appVersion: {current_version}'
replace = 'appVersion: {new_version}'
